# -*- coding: utf-8 -*-

import requests
import telebot
from telebot import types
from time import sleep

TOKEN = '567705667:AAG4wwnwLJTp8mpJnT-j7w7K6MIf2IN1cC4'

MONEY = 0 # exchange rates

CONV_DIR = 0 # convertation direction

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=["start"])
def first_start(message):
	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, {}, —è –º–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º —Å —Ä–µ—à–µ–Ω–∏–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á".format(message.from_user.first_name))
	start(message)

def start(message): 
	keyboard = types.ReplyKeyboardMarkup()
	keyboard.add(types.KeyboardButton('üå¶–ü–æ–≥–æ–¥–∞'))
	keyboard.add(types.KeyboardButton('üí≤–ö—É—Ä—Å –í–∞–ª—é—Ç'))
	keyboard.add(types.KeyboardButton('üì∞–ù–æ–≤–æ—Å—Ç–∏'))
	bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é',reply_markup=keyboard)

@bot.message_handler(regexp="–ù–∞ –∑–∞–≤—Ç—Ä–∞")
def tom_weather(message):
	response = requests.get("https://api.apixu.com/v1/forecast.json?key=4f177201ebb542d5a54184431180104&q=Kiev&lang=ru&days=2")
	data = response.json()
	description = data['forecast']['forecastday'][1]['day']['condition']['text']
	temp_min = data['forecast']['forecastday'][1]['day']['mintemp_c']
	temp_max = data['forecast']['forecastday'][1]['day']['maxtemp_c'] 
	weatherID = data['forecast']['forecastday'][1]['day']['condition']['code']
	precipitation = data['forecast']['forecastday'][1]['day']['totalprecip_mm']
	emoji = getEmoji(weatherID) 	
	bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ –≤ –ë–æ—Ä–∏—Å–ø–æ–ª–µ " + description + emoji + 
									"\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç " +str(int(temp_min))+"..."+str(int(temp_max))+"‚ÑÉ."+
									"\n–û—Å–∞–¥–∫–∏: " + str(int(precipitation)) + " –º–º.")
	start(message)	


@bot.message_handler(regexp="–ü–æ–≥–æ–¥–∞")
def weather(message): 
	response = requests.get("https://api.apixu.com/v1/forecast.json?key=4f177201ebb542d5a54184431180104&q=Kiev&lang=ru&days=2")
	data = response.json()
	description = data['current']['condition']['text']
	temp = data['current']['temp_c']
	temp_min = data['forecast']['forecastday'][0]['day']['mintemp_c']
	temp_max = data['forecast']['forecastday'][0]['day']['maxtemp_c']
	temp_feel = data['current']['feelslike_c']
	weatherID = data['current']['condition']['code']
	precipitation = data['forecast']['forecastday'][0]['day']['totalprecip_mm']
	emoji = getEmoji(weatherID)
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
	button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µüìç", request_location=True)
	keyboard.add(*[types.KeyboardButton(name) for name in ['–ù–∞ –∑–∞–≤—Ç—Ä–∞','–ú–µ–Ω—é']])
	keyboard.add(button_geo)
	bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –≤ –ë–æ—Ä–∏—Å–ø–æ–ª–µ " + description + emoji + 
									"\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç " +str(int(temp_min))+"..."+str(int(temp_max))+"‚ÑÉ."+
									"\n–°–µ–π—á–∞—Å "+str(int(temp)) + "‚ÑÉ, –Ω–æ –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ " + str(int(temp_feel))+"‚ÑÉ"+
									"\n–û—Å–∞–¥–∫–∏: " + str(int(precipitation)) + " –º–º.",reply_markup=keyboard)

########## exchange rates
	
@bot.message_handler(regexp="–ö—É—Ä—Å –í–∞–ª—é—Ç")
def currency(message): 
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard.add(*[types.KeyboardButton(name) for name in ['ÔºÑ', '‚Ç¨', '‚ÇΩ','–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å','–ú–µ–Ω—é']])
	bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',reply_markup=keyboard)

@bot.message_handler(regexp="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
def convert(message):
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard.add(*[types.KeyboardButton(name) for name in ['–î–æ–ª–ª–∞—Ä –≤ –≥—Ä–∏–≤–Ω—É', '–ï–≤—Ä–æ –≤ –≥—Ä–∏–≤–Ω—É', '–†—É–±–ª—å –≤ –≥—Ä–∏–≤–Ω—É',
													  '–ì—Ä–∏–≤–Ω—É –≤ –¥–æ–ª–ª–∞—Ä', '–ì—Ä–∏–≤–Ω—É –≤ –µ–≤—Ä–æ', '–ì—Ä–∏–≤–Ω—É –≤ —Ä—É–±–ª—å','–ú–µ–Ω—é']])
	bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É',reply_markup=keyboard)


@bot.message_handler(regexp="–î–æ–ª–ª–∞—Ä –≤ –≥—Ä–∏–≤–Ω—É")
def dol_g(message):
	data = get_money_info()
	global MONEY, CONV_DIR
	CONV_DIR = 0 
	MONEY = data[0]['buy']
	show_money_request(message)
	
	
@bot.message_handler(regexp="–ï–≤—Ä–æ –≤ –≥—Ä–∏–≤–Ω—É")
def eur_g(message): 
	data = get_money_info()
	global MONEY, CONV_DIR
	CONV_DIR = 0 
	MONEY = data[1]['buy']
	show_money_request(message)


@bot.message_handler(regexp="–†—É–±–ª—å –≤ –≥—Ä–∏–≤–Ω—É")
def rub_g(message): 
	data = get_money_info()
	global MONEY, CONV_DIR 
	CONV_DIR = 0
	MONEY = data[2]['buy']
	show_money_request(message)

@bot.message_handler(regexp="–ì—Ä–∏–≤–Ω—É –≤ –¥–æ–ª–ª–∞—Ä")
def g_dol(message): 
	data = get_money_info()
	global MONEY, CONV_DIR
	CONV_DIR = 1
	MONEY = data[0]['sale']
	show_money_request(message)

@bot.message_handler(regexp="–ì—Ä–∏–≤–Ω—É –≤ –µ–≤—Ä–æ")
def g_eur(message): 
	data = get_money_info()
	global MONEY, CONV_DIR 
	CONV_DIR = 1
	MONEY = data[1]['sale']
	show_money_request(message)

@bot.message_handler(regexp="–ì—Ä–∏–≤–Ω—É –≤ —Ä—É–±–ª—å")
def g_rub(message):  
	data = get_money_info()
	global MONEY, CONV_DIR
	CONV_DIR = 1  
	MONEY = data[2]['sale']
	show_money_request(message)


@bot.message_handler(regexp="ÔºÑ")
def dollar(message): 
	data = get_money_info()
	buy = data[0]['buy']
	sale = data[0]['sale']
	bot.send_message(message.chat.id, "1ÔºÑ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞ " + str(sale[:5]) + "‚Ç¥" 
								  + "\n1ÔºÑ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∑–∞ " + str(buy[:5]) + "‚Ç¥")
	
@bot.message_handler(regexp="‚Ç¨")
def euro(message): 
	response = requests.get(" https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5")
	data = response.json()
	buy = data[1]['buy']
	sale = data[1]['sale']
	bot.send_message(message.chat.id, "1‚Ç¨ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞ " + str(sale[:5]) + "‚Ç¥" 
								  + "\n1‚Ç¨ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∑–∞ " + str(buy[:5]) + "‚Ç¥")	

@bot.message_handler(regexp="‚ÇΩ")
def rubl(message): 
	response = requests.get(" https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5")
	data = response.json()
	buy = data[2]['buy']
	sale = data[2]['sale']
	bot.send_message(message.chat.id, "1‚ÇΩ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞ " + str(sale[:5]) + "‚Ç¥" 
								  + "\n1‚ÇΩ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∑–∞ " + str(buy[:5]) + "‚Ç¥")									  	
	
########## NEWS

@bot.message_handler(regexp="–ú–∏—Ä–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏")
def top(message): 
	response = requests.get("https://newsapi.org/v2/everything?q=–æ&language=ru&apiKey=08d40645632745818755098fdfbec6a8&sortBy=popularity&pagesize=5")
	data = response.json()
	for i in data['articles']:
		article = i['url']
		bot.send_message(message.chat.id, article)

@bot.message_handler(regexp="–ù–æ–≤–æ—Å—Ç–∏")
def news(message): 
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard.add(*[types.KeyboardButton(name) for name in ['–¢–æ–ø 5 üá∫üá¶', 'üì±–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏']]) 
	keyboard.add(types.KeyboardButton('üåê–ú–∏—Ä–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏'))
	keyboard.add(types.KeyboardButton('–ú–µ–Ω—é'))
	bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–æ–≤–æ—Å—Ç–µ–π',reply_markup=keyboard)


@bot.message_handler(regexp="–¢–æ–ø")
def top(message): 
	response = requests.get("https://newsapi.org/v2/top-headlines?country=ua&apiKey=08d40645632745818755098fdfbec6a8&pagesize=5")
	data = response.json()
	for i in data['articles']:
		article = i['url']
		bot.send_message(message.chat.id, article)

@bot.message_handler(regexp="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
def top(message): 
	response = requests.get("https://newsapi.org/v2/top-headlines?country=ru&apiKey=08d40645632745818755098fdfbec6a8&pagesize=5&category=technology")
	data = response.json()
	for i in data['articles']:
		article = i['url']
		bot.send_message(message.chat.id, article)

@bot.message_handler(regexp="–ú–µ–Ω—é")
def menu(message): 
	start(message)

@bot.message_handler(content_types=['text'])
def get_num(message):
	global MONEY, CONV_DIR
	if not message.text.isdigit():
		return
	if MONEY == 0:
		return
	if CONV_DIR == 0:		
		result = float(message.text) * float(MONEY)
	else: 
		result = float(message.text) / float(MONEY)	
	bot.send_message(message.chat.id, '–í—ã –ø–æ–ª—É—á–∏—Ç–µ '+ str(result)[:10])
	MONEY = 0
	start(message)	

@bot.message_handler(content_types=['location'])
def locate(message):
	latitude = message.location.latitude
	longitude = message.location.longitude
	response = requests.get("https://api.apixu.com/v1/forecast.json?key=4f177201ebb542d5a54184431180104&q={},{}&lang=ru&days=2"
																						 .format(str(latitude),str(longitude)))
	data = response.json()
	description = data['current']['condition']['text']
	data = response.json()
	temp = data['current']['temp_c']
	temp_min = data['forecast']['forecastday'][0]['day']['mintemp_c']
	temp_max = data['forecast']['forecastday'][0]['day']['maxtemp_c']
	temp_feel = data['current']['feelslike_c']
	weatherID = data['current']['condition']['code']
	precipitation = data['forecast']['forecastday'][0]['day']['totalprecip_mm']
	location = data['location']['name'] + ", " + data['location']['region']
	emoji = getEmoji(weatherID)
	bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –≤ "+ location + " " + description + emoji + 
									"\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç " +str(int(temp_min))+"..."+str(int(temp_max))+"‚ÑÉ."+
									"\n–°–µ–π—á–∞—Å "+str(int(temp)) + "‚ÑÉ, –Ω–æ –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ " + str(int(temp_feel))+"‚ÑÉ"+
									"\n–û—Å–∞–¥–∫–∏: " + str(int(precipitation)) + " –º–º.")

	description = data['forecast']['forecastday'][1]['day']['condition']['text']
	temp_min = data['forecast']['forecastday'][1]['day']['mintemp_c']
	temp_max = data['forecast']['forecastday'][1]['day']['maxtemp_c'] 
	weatherID = data['forecast']['forecastday'][1]['day']['condition']['code']
	precipitation = data['forecast']['forecastday'][1]['day']['totalprecip_mm']
	emoji = getEmoji(weatherID) 	
	bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ –≤ " + location + " " + description + emoji + 
									"\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç " +str(int(temp_min))+"..."+str(int(temp_max))+"‚ÑÉ."+
									"\n–û—Å–∞–¥–∫–∏: " + str(int(precipitation)) + " –º–º.")
	start(message)

	

def get_money_info():
	response = requests.get(" https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5")
	return response.json()

def show_money_request(message):
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard.add('–ú–µ–Ω—é')
	bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞',reply_markup=keyboard)

def getEmoji(weatherID):
	if weatherID:
		if  weatherID == 1273 or weatherID==1276 or weatherID==1087 or weatherID==1279 or weatherID==1282:
			return "‚õà‚ö°"
		elif weatherID==1072 or weatherID==1150 or weatherID==1153 or weatherID==1168 or weatherID==1171:
			return "‚òî"
		elif (weatherID == 1063 or weatherID==1180 or weatherID==1183 or weatherID==1186 or weatherID==1189 or weatherID==1192 
			or weatherID==1195 or weatherID==1240 or weatherID==1243 or weatherID==1246):
			return "üåß"
		elif (weatherID==1066 or weatherID== 1114 or weatherID==1210 or weatherID==1213 or weatherID==1216
			or weatherID==1219 or weatherID==1222 or weatherID==1225 or weatherID==1255 or weatherID==1258 or weatherID==1117):
			return "‚ùÑ‚òÉ"
		elif weatherID==1069 or weatherID==1204 or weatherID==1207 or weatherID==1249 or weatherID==1252:
			return "üå®"
		if weatherID == 1000:
			return "‚òÄ"
		elif weatherID == 1003:
			return "üå§"
		elif weatherID==1006 or weatherID==1009:
			return "‚òÅ"
		elif weatherID == 1030 or weatherID==1135 or weatherID==1147:
			return "üå´"	
		elif weatherID == 1198 or weatherID==1201:
			return "üåß‚ùÑ"	
		else:
			return "üåÜ"   
	else:
		return "üåÜ"   		

	
if __name__ == '__main__':

	while True:

		try:
			bot.polling(none_stop=True, timeout=60)
		except Exception as e:
			logger.error(e)
			time.sleep(15)